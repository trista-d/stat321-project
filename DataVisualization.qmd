---
title: "Data Visualization Final Project"
author: "Karen Nickel"
format: html
editor: visual
---

## Data Visualization Comments/Criteria

8\. Can we use R packages like ggplot2 or plotly for visualization?\
➢ Yes! You are free to use any R packages we discussed in class. Just make sure you\
cite the package in the references.

\
9. How many visualizations are required?\
➢ There is no fixed number, but you should create at least 3-5 visualizations that help\
explain your dataset and analysis.

\
10. Do we need interactive visualizations?\
➢ Interactive visualizations are optional, but they can enhance your project and\
improve your presentation score.

## Import and Read Dataset

```{r}
library(readr)
library(dplyr)
cleaned_nfl_data <- read_csv("final_clean_nfl.csv")
View(final_clean_nfl)
```

# Using only the lowest 80 capped values in a histogram - this will be plot 1 in report

From looking at salary histogram with raw data, we can see that the 2024 salaries of NFL recievers is heavily right skewed, with several extreme outliers with very high salaries. Then tried capping with the IQR method and it remained skewed still because there were a lot of upper outliers. So then cut outliers and found that worked best.

##### Setup:

```{r}
q1 <- quantile(final_clean_nfl$Salary, 0.25) 
q3 <- quantile(final_clean_nfl$Salary, 0.75) 
iqr <- q3 - q1 
lower <- q1 - 1.5*iqr 
upper <- q3 + 1.5*iqr   
sal <- ifelse(final_clean_nfl$Salary < lower, lower, ifelse(final_clean_nfl$Salary > upper, upper, final_clean_nfl$Salary))
sort(sal)

cutcap_nfl <- final_clean_nfl
cutcap_nfl$capSalary <- sal
cutcap_nfl <- cutcap_nfl %>%
  arrange(capSalary)
cutcap_nfl <- head(cutcap_nfl, 80)
```

##### UI:

```{r}
library(ggplot2)
library(shiny)

ui_salary <- fluidPage(
  titlePanel("Capped Salary Histogram"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("bins",
                  "Number of Bins:",
                  min= 5,
                  max= 50,
                  value= 10) #Default is 10bins

      ),
    mainPanel(
      plotOutput("histPlot") #Output placeholder for the histogram
      ) 
    )
  )
```

##### Server:

```{r}
server_salary <- function(input,output){
  output$histPlot <- renderPlot({      # use the Salary data from dataset
    salary_data <- cutcap_nfl$capSalary
 #Create the histogram with user-defined bins
 ggplot(data = data.frame(x = salary_data), aes(x = cutcap_nfl$capSalary)) +
   geom_histogram(bins = input$bins, fill = '#009E73', color = "white") + 
   # green for $$
  theme_minimal() +
   labs(
     title = "Histogram of Capped NFL Receiver 2024 Salaries",
     x = "Capped Salary ($)",
     y = "Frequency"
     )
  })
}
```

##### Running the App:

```{r, eval = FALSE}
shinyApp(ui = ui_salary, server = server_salary)
```

Having kept only the 80 lowest salaries we reach a salary distribution that is closest to normally distributed of all our attempts. Even using Boxcox method (Trista's section), by cutting out the outliers that was closest to normally-distributed. We will be using this capped and cut salary variable and its associated values for any salary visualizations.

# Plots based on Trista's modeling results

Used this site <https://stackoverflow.com/questions/15624656/label-points-in-geom-point> to add labels to specific points on the plot.

Salary \~ catchRate

```{r}
library(readr)
library(dplyr)
library(ggplot2)
```

```{r}
ggplot(cutcap_nfl, aes(x = catchRate, y = capSalary)) +
  geom_point(size = 3, color = '#D55E00') +   # size is for size of the points    
  labs(title = "Salary vs. Catch Rate",
       x = "Catch Rate",
       y = "2024 Salary ($)") +
  ylim(500000, 1505000) + 
  # add a vertical line at the mean catch rate, mean because normally distributed catch rate
  geom_vline(xintercept = mean(cutcap_nfl$catchRate), color = "grey") +
  theme_minimal() +
  # label the players with highest catch rates
  geom_text(label = ifelse(cutcap_nfl$catchRate > 0.90, cutcap_nfl$Player, ''), hjust = 0.7, vjust = -1) +
    annotate("text", label = "Mean Catch Rate", x = mean(cutcap_nfl$catchRate), y = 1500000, color = "grey")
```

Rec \~ Yds

```{r}
ggplot(final_clean_nfl, aes(x = Yds, y = Rec)) +
  geom_point(size = 3, color = '#D55E00') +   # size is for size of the points
  labs(title = "Receptions vs. Yards",
       x = "Yards",
       y = "Receptions") +
  ylim(30, 130) +
  xlim(300, 1800) +
  # add a vertical line at the median yards because skewed. 
  geom_vline(xintercept = median(final_clean_nfl$Yds), color = "grey") +
  theme_minimal() +
  # label the players with highest number of yards
  geom_text(label = ifelse(final_clean_nfl$Yds > 1500, final_clean_nfl$Player, ''), hjust = 0.7, vjust = -1) +
  annotate("text", label = "Median Yds", x = median(final_clean_nfl$Yds), y = 120, color = "grey") 
```

TD\~Yds

```{r}
ggplot(final_clean_nfl, aes(x = Yds, y = TD)) +
  geom_point(size = 3, color = '#D55E00') +   # size is for size of the points
  labs(title = "TD vs. Yds",
       x = "Yds",
       y = "TD") +
  ylim(0, 18) +
  xlim(300, 1800) +
  # add a vertical line at the median Yards because yards is skewed. 
  geom_vline(xintercept = mean(final_clean_nfl$Yds), color = "grey") +
  theme_minimal() +
  # label the players with highest number of yards
  geom_text(label = ifelse(final_clean_nfl$Yds > 1500, final_clean_nfl$Player, ''), hjust = 0.7, vjust = -1) +
  annotate("text", label = "Mean Yds", x = mean(final_clean_nfl$Yds), y = 17, color = "grey")
```

# Will make dashboard with final results from Trista's modeling with stuff highlighted. 

```{r}
hist(final_clean_nfl$catchRate)
```
